{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aboutText","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setDarkMode","_useState3","_useState4","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.acc828cf.chunk.js","sourcesContent":["import React from 'react'\r\n // eslint-disable-next-line/* \r\n/* import { Link} from 'react-router-dom' */ \r\nexport default function Navbar(props) {\r\n  return (\r\n  \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n          <a className=\"nav-link active\"  href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n          </li>\r\n          </ul>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" className=\"form-check-input\" />\r\n       <label htmlFor=\"flexSwitchCheckDefault\" className=\"form-check-label\"> Enable DarkMode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    \r\n  \r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nexport default function Textform(props) {\r\n\r\n    \r\nconst [text, setText] = useState('');\r\nconst handleUpClick=()=>{\r\n    let newText= text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"success\")\r\n}\r\n\r\nconst handleLoClick=()=>{\r\n  let newText= text.toLowerCase();\r\n  setText(newText);\r\n  props.showAlert(\"Converted to lowerCase\",\"success\")\r\n}\r\n\r\nconst handleClearClick=()=>{\r\n  let newText = \"\";\r\n  setText(newText);\r\n  props.showAlert(\"Text has been Cleared\",\"success\")\r\n}\r\nconst handleOnChange=(event)=>{\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n}\r\nconst handleExtraSpaces=()=>{\r\n  let newText= text.split(/[ ]+/);\r\n   setText(newText.join(\" \"))  \r\n   props.showAlert(\"Extra Space has been added\",\"success\")\r\n}\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'light',color:props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnChange} id=\"myBox\"  rows=\"8\"></textarea>\r\n    </div>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n    \r\n    <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n    \r\n    <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Spaces</button>\r\n    \r\n<div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n  <p> {text.split(\" \").length} words and {text.length}characters</p>\r\n<p>{0.008* text.split(\" \").length} Minutes Read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"enter something to get preview here \"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${(props.alert.type)} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n/* import About from './components/About'; */\n\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n\n/* \nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n   // eslint-disable-next-line\n  Link,\n  \n} from \"react-router-dom\"; */\n\nfunction App() {\n  const [mode, setDarkMode] = useState('light');\n\n  const [alert,setalert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setalert(null);\n    },1500)\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setDarkMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"dark mode has been enabled\",\"success\");\n    }\n    else {\n      setDarkMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n\n    \n      <Navbar title=\"azam\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n     {/*  <Routes>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\"> */}\n            \n        <Textform showAlert={showAlert} mode={mode} heading=\"Enter the text to analyse\" />\n         {/*  </Route>\n        </Routes> */}\n        </div>\n       {/*  </Router> */}\n      \n\n\n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}